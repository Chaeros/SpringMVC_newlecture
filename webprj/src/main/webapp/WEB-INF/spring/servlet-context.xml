<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
        
    <!-- Autowird 어노테이션을 통해 빈 객체를 만들고 싶을때 반드시 써줘야하는 태그 -->
    <!-- <context:annotation-config/> -->
    <context:component-scan base-package="com.newlecture.web.controller"/>

	<!-- id에는 url을, class에는 Controller 경로를 입력해서 빈 객체를 등록시킨다. -->
    <!--  <bean name="/index" class="com.newlecture.web.controller.IndexController"/> -->
    
    <!-- <bean name="/notice/list" class="com.newlecture.web.controller.notice.ListController">
    	property의 name은 변수명과 일치시켜준다.
    	<property name="noticeService" ref="noticeService"/>
    
    </bean>
    <bean name="/notice/detail" class="com.newlecture.web.controller.notice.DetailController"/> -->
    
    <!-- Resolver끼리의 충돌을 방지하기 위해 순서 설정 order를 넣음 -->
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass"
  			value="org.springframework.web.servlet.view.tiles3.TilesView"/>
  		<property name="order" value="1"/>
    </bean>
    
    <bean
	    class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <property name="definitions" value="/WEB-INF/tiles.xml" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/WEB-INF/view/"></property>
	    <property name="suffix" value=".jsp"></property>
	    <property name="order" value="2"/>
	</bean>
    
    
    <!-- **는 하위 폴더를 포함한 그 폴더의 모든 하위 폴더/파일 포함 -->
    <!-- /static/ 주소를 /로 매핑시킴 -->
    <!-- mvc:resources는 정적 파일 받아오면 실행하는것임(css의 이미지등) -->
    <mvc:resources location="/static/" mapping="/**"></mvc:resources>
    <!-- 아래 태그가 있어야 어노테이션으로 객체를 생성한 뒤, 해당 객체가 매핑해주는 주소를 찾아줄 수 있다. -->
    <mvc:annotation-driven>
    	<mvc:message-converters> <!-- @ResponseBody로 String 처리할 때 한글처리 -->
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
    			<property name="supportedMediaTypes">
    				<list>
    					<value>text/html;charset=UTF-8</value>
    				</list>
    			</property>
    		</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>
</beans>